# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type BoardImage {
  id: String!
  url: String!
}

type Category {
  id: String!
  name: String!
}

type Tag {
  id: String!
  name: String!
  CategoryId: Category!
  users: [User!]!
  boards: [Board!]!
}

type UserImage {
  id: String!
  url: String!
}

type User {
  id: String!
  email: String!
  password: String!
  nickname: String!
  description: String!
  isRemote: Boolean!
  point: Int!
  history: String!
  userImage: UserImage!
  tags: [Tag!]!
  boards: [Board!]!
  keywords: [Keyword!]!
}

type Keyword {
  id: String!
  name: String!
  users: [User!]!
  boards: [Board!]!
}

type Board {
  id: String!
  title: String!
  context: String!
  num: Int!
  description: String!
  leader: String!
  isPremium: Boolean!
  endAt: DateTime!
  boardImage: BoardImage!
  tags: [Tag!]!
  users: [User!]!
  keywords: [Keyword!]!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Like {
  id: String!
  boards: [Board!]!
  users: [User!]!
}

type Payment {
  id: String!
  amount: Int!
  method: String!
  isCancel: Boolean!
  user: User!
}

type UserUrl {
  id: String!
  user: User!
}

type Comment {
  id: String!
  comment: String!
  board: [Board!]!
  user: [User!]!
}

type SubComment {
  id: String!
  subComment: String!
  user: [User!]!
  comment: [Comment!]!
}

type PaymentHistory {
  id: String!
  user: [User!]!
  board: [Board!]!
}

type Query {
  fetchUsers: [User!]!
  fetchUser(userId: String!): User!
  boards: [Board!]!
  board(id: String!): Board!
  findAll: [UserImage!]!
  findOne(id: String!): UserImage!
  tags: [Tag!]!
  tag(id: String!): Tag!
  categories: [Category!]!
  category(id: String!): Category!
  likes: [Like!]!
  like(id: Int!): Like!
  payments: [Payment!]!
  payment(id: String!): Payment!
  boardImages: [BoardImage!]!
  boardImage(id: String!): BoardImage!
  comments: [Comment!]!
  comment(id: String!): Comment!
  subComments: [SubComment!]!
  subComment(id: Int!): SubComment!
  paymentHistories: [PaymentHistory!]!
  paymentHistory(id: Int!): PaymentHistory!
}

type Mutation {
  createUser(createUserInput: CreateUserInput!): User!
  updateUser(userId: String!, updateUserInput: UpdateUserInput!): User!
  removeUser(userId: String!): User!
  createBoard(createBoardInput: CreateBoardInput!): Board!
  updateBoard(updateBoardInput: UpdateBoardInput!): Board!
  removeBoard(id: String!): Board!
  createKeyword(createKeywordInput: CreateKeywordInput!): Keyword!
  updateKeyword(keywordId: String!, updateKeywordInput: UpdateKeywordInput!): Keyword!
  removeKeyword(id: String!): Keyword!
  createTag(createTagInput: CreateTagInput!): Tag!
  updateTag(updateTagInput: UpdateTagInput!): Tag!
  removeTag(id: String!): Tag!
  createCategory(createCategoryInput: CreateCategoryInput!): Category!
  updateCategory(updateCategoryInput: UpdateCategoryInput!): Category!
  removeCategory(id: String!): Category!
  createLike(createLikeInput: CreateLikeInput!): Like!
  updateLike(updateLikeInput: UpdateLikeInput!): Like!
  removeLike(id: Int!): Like!
  createPayment(createPaymentInput: CreatePaymentInput!): Payment!
  updatePayment(updatePaymentInput: UpdatePaymentInput!): Payment!
  removePayment(id: String!): Payment!
  createUserUrl(createUserUrlInput: CreateUserUrlInput!): UserUrl!
  updateUserUrl(userId: String!, updateUserUrlInput: UpdateUserUrlInput!): UserUrl!
  removeUserUrl(id: String!): UserUrl!
  createUserImage(createUserImageInput: CreateUserImageInput!): UserImage!
  updateUserImage(userId: String!, updateUserImageInput: UpdateUserImageInput!): UserImage!
  removeUserImage(id: String!): UserImage!
  createBoardImage(createBoardImageInput: CreateBoardImageInput!): BoardImage!
  updateBoardImage(updateBoardImageInput: UpdateBoardImageInput!): BoardImage!
  removeBoardImage(id: String!): BoardImage!
  createComment(createCommentInput: CreateCommentInput!): Comment!
  updateComment(updateCommentInput: UpdateCommentInput!): Comment!
  removeComment(id: String!): Comment!
  createSubComment(createSubCommentInput: CreateSubCommentInput!): SubComment!
  updateSubComment(updateSubCommentInput: UpdateSubCommentInput!): SubComment!
  removeSubComment(id: Int!): SubComment!
  createPaymentHistory(createPaymentHistoryInput: CreatePaymentHistoryInput!): PaymentHistory!
  updatePaymentHistory(updatePaymentHistoryInput: UpdatePaymentHistoryInput!): PaymentHistory!
  removePaymentHistory(id: Int!): PaymentHistory!
}

input CreateUserInput {
  email: String!
  password: String!
  nickname: String!
  description: String!
  isRemote: Boolean!
  point: Int!
  history: String!
  userImage: CreateUserImageInput!
  tags: [String!]!
  boards: [String!]!
  keywords: [String!]!
}

input CreateUserImageInput {
  url: String!
}

input UpdateUserInput {
  email: String
  password: String
  nickname: String
  description: String
  isRemote: Boolean
  point: Int
  history: String
  userImage: CreateUserImageInput
  tags: [String!]
  boards: [String!]
  keywords: [String!]
}

input CreateBoardInput {
  title: String!
}

input UpdateBoardInput {
  title: String
  id: String!
}

input CreateKeywordInput {
  name: String!
}

input UpdateKeywordInput {
  name: String
}

input CreateTagInput {
  """Example field (placeholder)"""
  id: String!
}

input UpdateTagInput {
  id: String!
}

input CreateCategoryInput {
  """Example field (placeholder)"""
  id: String!
}

input UpdateCategoryInput {
  id: String!
}

input CreateLikeInput {
  """Example field (placeholder)"""
  id: String!
}

input UpdateLikeInput {
  id: String!
}

input CreatePaymentInput {
  """Example field (placeholder)"""
  id: String!
}

input UpdatePaymentInput {
  id: String!
}

input CreateUserUrlInput {
  user: String!
}

input UpdateUserUrlInput {
  user: String
}

input UpdateUserImageInput {
  url: String
}

input CreateBoardImageInput {
  """Example field (placeholder)"""
  id: String!
}

input UpdateBoardImageInput {
  id: String!
}

input CreateCommentInput {
  """Example field (placeholder)"""
  id: String!
}

input UpdateCommentInput {
  id: String!
}

input CreateSubCommentInput {
  """Example field (placeholder)"""
  id: String!
}

input UpdateSubCommentInput {
  id: String!
}

input CreatePaymentHistoryInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdatePaymentHistoryInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}