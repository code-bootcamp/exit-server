# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type BoardImage {
  id: String!
  url: String!
}

type Keyword {
  id: String!
  name: String!
  users: [User!]!
  boards: [Board!]!
}

type Category {
  id: String!
  name: String!
}

type Tag {
  id: String!
  name: String!
  CategoryId: Category!
  users: [User!]!
  boards: [Board!]!
}

type Board {
  id: String!
  title: String!
  context: String!
  num: Int!
  description: String!
  leader: String!
  isPremium: Boolean!
  endAt: DateTime!
  imageId: BoardImage!
  tags: [Tag!]!
  users: [User!]!
  keywords: [Keyword!]!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type UserImage {
  id: String!
  url: String!
}

type User {
  id: String!
  email: String!
  password: String!
  nickname: String!
  description: String!
  isRemote: Boolean!
  point: Int!
  history: String!
  imageId: UserImage!
  tags: [Tag!]!
  boards: [Board!]!
  keywords: [Keyword!]!
}

type Like {
  id: String!
  boards: [Board!]!
  users: [User!]!
}

type Payment {
  id: String!
  amount: Int!
  method: String!
  isCancel: Boolean!
  userId: User!
}

type UserUrl {
  id: String!
  userId: User!
}

type Comment {
  id: String!
  comment: String!
  boardId: [Board!]!
}

type SubComment {
  id: String!
  subComment: String!
  commentId: [Comment!]!
}

type Query {
  users: [User!]!
  user(id: String!): User!
  boards: [Board!]!
  board(id: String!): Board!
  keywords: [Keyword!]!
  keyword(id: String!): Keyword!
  tags: [Tag!]!
  tag(id: String!): Tag!
  categories: [Category!]!
  category(id: String!): Category!
  likes: [Like!]!
  like(id: Int!): Like!
  payments: [Payment!]!
  payment(id: String!): Payment!
  userUrls: [UserUrl!]!
  userUrl(id: String!): UserUrl!
  userImages: [UserImage!]!
  userImage(id: String!): UserImage!
  boardImages: [BoardImage!]!
  boardImage(id: String!): BoardImage!
  comments: [Comment!]!
  comment(id: String!): Comment!
  subComments: [SubComment!]!
  subComment(id: Int!): SubComment!
}

type Mutation {
  createUser(createUserInput: CreateUserInput!): User!
  updateUser(updateUserInput: UpdateUserInput!): User!
  removeUser(id: String!): User!
  createBoard(createBoardInput: CreateBoardInput!): Board!
  updateBoard(updateBoardInput: UpdateBoardInput!): Board!
  removeBoard(id: String!): Board!
  createKeyword(createKeywordInput: CreateKeywordInput!): Keyword!
  updateKeyword(updateKeywordInput: UpdateKeywordInput!): Keyword!
  removeKeyword(id: String!): Keyword!
  createTag(createTagInput: CreateTagInput!): Tag!
  updateTag(updateTagInput: UpdateTagInput!): Tag!
  removeTag(id: String!): Tag!
  createCategory(createCategoryInput: CreateCategoryInput!): Category!
  updateCategory(updateCategoryInput: UpdateCategoryInput!): Category!
  removeCategory(id: String!): Category!
  createLike(createLikeInput: CreateLikeInput!): Like!
  updateLike(updateLikeInput: UpdateLikeInput!): Like!
  removeLike(id: Int!): Like!
  createPayment(createPaymentInput: CreatePaymentInput!): Payment!
  updatePayment(updatePaymentInput: UpdatePaymentInput!): Payment!
  removePayment(id: String!): Payment!
  createUserUrl(createUserUrlInput: CreateUserUrlInput!): UserUrl!
  updateUserUrl(updateUserUrlInput: UpdateUserUrlInput!): UserUrl!
  removeUserUrl(id: String!): UserUrl!
  createUserImage(createUserImageInput: CreateUserImageInput!): UserImage!
  updateUserImage(updateUserImageInput: UpdateUserImageInput!): UserImage!
  removeUserImage(id: String!): UserImage!
  createBoardImage(createBoardImageInput: CreateBoardImageInput!): BoardImage!
  updateBoardImage(updateBoardImageInput: UpdateBoardImageInput!): BoardImage!
  removeBoardImage(id: String!): BoardImage!
  createComment(createCommentInput: CreateCommentInput!): Comment!
  updateComment(updateCommentInput: UpdateCommentInput!): Comment!
  removeComment(id: String!): Comment!
  createSubComment(createSubCommentInput: CreateSubCommentInput!): SubComment!
  updateSubComment(updateSubCommentInput: UpdateSubCommentInput!): SubComment!
  removeSubComment(id: Int!): SubComment!
}

input CreateUserInput {
  """Example field (placeholder)"""
  id: String!
}

input UpdateUserInput {
  id: String!
}

input CreateBoardInput {
  """Example field (placeholder)"""
  id: String!
}

input UpdateBoardInput {
  id: String!
}

input CreateKeywordInput {
  """Example field (placeholder)"""
  id: String!
}

input UpdateKeywordInput {
  id: String!
}

input CreateTagInput {
  """Example field (placeholder)"""
  id: String!
}

input UpdateTagInput {
  id: String!
}

input CreateCategoryInput {
  """Example field (placeholder)"""
  id: String!
}

input UpdateCategoryInput {
  id: String!
}

input CreateLikeInput {
  """Example field (placeholder)"""
  id: String!
}

input UpdateLikeInput {
  id: String!
}

input CreatePaymentInput {
  """Example field (placeholder)"""
  id: String!
}

input UpdatePaymentInput {
  id: String!
}

input CreateUserUrlInput {
  """Example field (placeholder)"""
  id: String!
}

input UpdateUserUrlInput {
  id: String!
}

input CreateUserImageInput {
  """Example field (placeholder)"""
  id: String!
}

input UpdateUserImageInput {
  id: String!
}

input CreateBoardImageInput {
  """Example field (placeholder)"""
  id: String!
}

input UpdateBoardImageInput {
  id: String!
}

input CreateCommentInput {
  """Example field (placeholder)"""
  id: String!
}

input UpdateCommentInput {
  id: String!
}

input CreateSubCommentInput {
  """Example field (placeholder)"""
  id: String!
}

input UpdateSubCommentInput {
  id: String!
}